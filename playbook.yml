---
- name: "Setup workstation for personal/school use"
  hosts: all
  become: yes
  tasks:
    - name: "Update existing pacman packages"
      pacman:
        update_cache: yes
        upgrade: yes
    - name: "Ensure pacman packages are installed"
      pacman:
        update_cache: yes
        name:
          - flatpak
          - base
          - base-devel
          - git
          - vim
          - sudo
          - neofetch
          - lolcat 
          - plasma-meta
          - zsh
          - zsh-completions
          - ntp
          - ark
          - okular
          - dolphin
          - nftables
          - firewalld
        state: latest
    - name: "Ensure flatpak applications are installed"
      flatpak:
        name:
          - org.mozilla.firefox
          - org.texstudio.TeXstudio
          - com.microsoft.Teams
          - com.github.micahflee.torbrowser-launcher
          - org.geogebra.GeoGebra
          - com.jgraph.drawio.desktop
          - md.obsidian.Obsidian
          - org.libreoffice.LibreOffice
          - org.videolan.VLC
          - org.telegram.desktop
          - com.spotify.Client
          - com.discordapp.Discord
          - net.ankiweb.Anki
          - com.nextcloud.desktopclient.nextcloud
          - org.keepassxc.KeePassXC
            # application might be broken - doesn't work manually either
            #- com.jetbrains.IntelliJ-IDEA-Ultimate
          - com.github.xournalpp.xournalpp
        state: present
    - name: "Ensure services are configured"
      service:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
        enabled: "{{ item.enabled }}"
      loop:
        - { name: "ntpd", state: "started", enabled: yes }
        - { name: "firewalld", state: "started", enabled: yes }
    - name: "Ensure timezone and hwclock are configured"
      timezone:
        name: "Europe/Vienna"
        hwclock: "UTC"

    - name: "Ensure localisation files are generated"
      locale_gen:
        name: "{{ item.locale }}"
        state: present
      loop: 
        - {locale: "de_AT.UTF-8"}
        - {locale: "en_US.UTF-8"}
        - {locale: "en_DK.UTF-8"}

    - block:      
      - name: "Check whether working files exist"
        stat:
          path: "{{ item.path }}"
        loop:
          - {path: "/etc/locale.conf"}
          - {path: "/etc/vconsole.conf"}
        register: file

      - name: "Create files as needed"
        file:
          path: "{{ item.stat.path }}"
          state: touch
        loop: "{{ file.results }}"
        changed_when: not item.stat.exists

    - name: "Ensure locale variables are configured"
      lineinfile:
        path: "/etc/locale.conf"
        regexp: "{{ item.key }}=([^\\n]*)"
        line: "{{ item.key }}={{ item.value }}"
        state: present
      loop:
        # Uncomment and set as needed
        # 
        # Listed in override priority order
        # (see: https://www.gnu.org/software/gettext/manual/gettext.html#Locale-Environment-Variables)
        #
        # 1.
        #- {key: "LANGUAGE", value: ""}
        #
        # 2.
        #- {key: "LC_ALL", value: ""}
        #
        # 3.
        #- {key: "LC_CTYPE", value: "en_US.UTF-8"}
        - {key: "LC_NUMERIC", value: "en_US.UTF-8"}
        # ISO8601 time format
        # (see: https://wiki.archlinux.org/title/Locale#LC_TIME:_date_and_time_format)
        - {key: "LC_TIME", value: "en_DK.UTF-8"}
        #- {key: "LC_COLLATE", value: ""}
        #- {key: "LC_MONETARY", value: ""}
        - {key: "LC_MESSAGES", value: "en_US.UTF-8"}
        #- {key: "LC_PAPER", value: ""}
        #- {key: "LC_NAME", value: ""}
        #- {key: "LC_ADDRESS", value: ""}
        #- {key: "LC_TELEPHONE", value: ""}
        #- {key: "LC_MEASUREMENT", value: ""}
        #- {key: "LC_IDENTIFICATION", value: ""}
        #
        # 4.
        - {key: "LANG", value: "de_AT.UTF-8"}

    - name: "Ensure console keyboard layout is configured"
      lineinfile:
        path: "/etc/vconsole.conf"
        regexp: "KEYMAP=[^\\n]*"
        line: "KEYMAP=de-latin1-nodeadkeys"
        state: present

    - name: "Ensure hostname is configured"
      copy:
        dest: "/etc/hostname"
        content: "automated-pc" # TODO use variable

    - name: "Ensure users are configured"
      user:
        name: "felixsch01"
        password: "test" # TODO use variable outside git # TODO encrypt password
        update_password: always
        comment: "Felix Schmölzer"
        shell: "/bin/zsh"
        group: "wheel"
        home: "/home/felixsch01/"
        create_home: yes
        state: present
    
    - name: "Ensure git is configured"
      git_config:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        scope: "{{ item.scope }}"
      loop:
        - {name: "user.name", value: "Felix Schmölzer", scope: "global"}
        - {name: "user.email", value: "felix.schmoelzer1@gmail.com", scope: "global"}

    - name: "Ensure pacman is configured"
      lineinfile:
        path: "/etc/pacman.conf"
        insertafter: "\\[options\\]"
        regexp: "[^\\n.]*{{ item }}[^\\n.]*"
        line: "{{ item }}"
        state: present
      loop: ["Color", "ILoveCandy"]

    - name: "Ensure sudo is configured"
      lineinfile:
        path: "/etc/sudoers"
        regexp: "[^\\n.]*{{ item }}[^\\n.]*"
        line: "{{ item }}"
        state: present
        validate: "visudo -c %s"  
      loop:
        ["Defaults insults",
        "Defaults targetpw",
        "%wheel ALL=(ALL:ALL) ALL",
        "Defaults env_reset",
        "Defaults editor=/usr/bin/vim, !env_editor"]

